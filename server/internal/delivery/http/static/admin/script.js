document.addEventListener('DOMContentLoaded', () => {
	const API_BASE_URL = '/admin'
	const tokenInput = document.getElementById('admin-token')
	const saveTokenBtn = document.getElementById('save-token')
	const statusMessage = document.getElementById('status-message')

	// –ù–∞–≤–∏–≥–∞—Ü–∏—è
	const navRaffleBtn = document.getElementById('nav-raffle')
	const navWaitlistBtn = document.getElementById('nav-waitlist')
	const navWaitlistResBtn = document.getElementById('nav-waitlist-res') // üî• –ù–û–í–´–ô
	const raffleView = document.getElementById('raffle-view')
	const waitlistView = document.getElementById('waitlist-view')
	const waitlistResView = document.getElementById('waitlist-res-view') // üî• –ù–û–í–´–ô

	// –£—á–∞—Å—Ç–Ω–∏–∫–∏
	const refreshParticipantsBtn = document.getElementById('refresh-participants')
	const clearParticipantsBtn = document.getElementById('clear-participants')
	const participantsCount = document.getElementById('participants-count')
	const participantsBody = document.getElementById('participants-body')

	// –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏
	const selectWinnersForm = document.getElementById('select-winners-form')
	const refreshWinnersBtn = document.getElementById('refresh-winners')
	const clearWinnersBtn = document.getElementById('clear-winners')
	const winnersCount = document.getElementById('winners-count')
	const winnersBody = document.getElementById('winners-body')
	const winnersLimitInput = document.getElementById('winners-limit')

	// –í–∞–π—Ç–ª–∏—Å—Ç (–ó–∞—è–≤–∫–∏)
	const refreshWaitlistBtn = document.getElementById('refresh-waitlist')
	const clearWaitlistBtn = document.getElementById('clear-waitlist')
	const waitlistCount = document.getElementById('waitlist-count')
	const waitlistBody = document.getElementById('waitlist-body')

	// üî• –ù–û–í–´–ï: –í–∞–π—Ç–ª–∏—Å—Ç (–†–µ–∑—É–ª—å—Ç–∞—Ç—ã)
	const refreshWaitlistResBtn = document.getElementById('refresh-waitlist-res')
	const clearWaitlistResBtn = document.getElementById('clear-waitlist-res')
	const waitlistResCount = document.getElementById('waitlist-res-count')
	const waitlistResBody = document.getElementById('waitlist-res-body')

	// --- –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
	const savedToken = sessionStorage.getItem('adminToken')
	if (savedToken) {
		tokenInput.value = savedToken
	}
	saveTokenBtn.addEventListener('click', () => {
		const token = tokenInput.value.trim()
		if (!token) {
			showStatus('–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω.', 'error')
			return
		}
		sessionStorage.setItem('adminToken', token)
		showStatus('–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Å–µ—Å—Å–∏–∏.', 'success')
		loadParticipants()
		loadWinners()
	})
	const getAuthHeader = () => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	}

	// --- –£–¢–ò–õ–ò–¢–´ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
	const showStatus = (message, type) => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	}
	const fetchData = async (endpoint, options = {}) => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	}

	// --- –§–£–ù–ö–¶–ò–ò –†–ï–ù–î–ï–†–ê ---
	const renderRaffleTable = (data, bodyElement, countElement) => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	}
	const renderWaitlistTable = data => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	}

	// üî• –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –†–µ–Ω–¥–µ—Ä —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤–∞–π—Ç–ª–∏—Å—Ç–∞
	const renderWaitlistResTable = data => {
		waitlistResBody.innerHTML = ''
		const items = Array.isArray(data) ? data : []
		waitlistResCount.textContent = items.length

		if (items.length === 0) {
			waitlistResBody.innerHTML =
				'<tr><td colspan="6" style="text-align: center;">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</td></tr>'
			return
		}

		items.forEach(item => {
			const row = document.createElement('tr')
			const checkedText = item.checked ? '–î–∞' : '–ù–µ—Ç'
			const checkedAt = item.checked_at
				? new Date(item.checked_at).toLocaleString()
				: '-'

			row.innerHTML = `
                <td>${item.id || '-'}</td>
                <td>${item.wallet_address || '-'}</td>
                <td>${item.result || '-'}</td>
                <td>${checkedText}</td>
                <td>${checkedAt}</td>
                <td>
                    <button class="small-danger delete-btn" data-id="${
											item.id
										}" data-type="waitlist-res">
                        –£–¥–∞–ª–∏—Ç—å
                    </button>
                </td>
            `
			waitlistResBody.appendChild(row)
		})
	}

	// --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –î–ï–ô–°–¢–í–ò–ô ---
	const loadParticipants = async () => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	}
	const loadWinners = async () => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	}
	const loadWaitlist = async () => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	}

	// üî• –ù–û–í–´–ô: –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤–∞–π—Ç–ª–∏—Å—Ç–∞
	const loadWaitlistRes = async () => {
		const data = await fetchData('/waitlist-res')
		if (data) {
			renderWaitlistResTable(data)
		}
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—á–∏—Å—Ç–∫–∏
	clearParticipantsBtn.addEventListener('click', async () => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	})
	clearWinnersBtn.addEventListener('click', async () => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	})
	clearWaitlistBtn.addEventListener('click', async () => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	})

	// üî• –ù–û–í–´–ô: –û—á–∏—Å—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤–∞–π—Ç–ª–∏—Å—Ç–∞
	clearWaitlistResBtn.addEventListener('click', async () => {
		if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –í–°–ï —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–π—Ç–ª–∏—Å—Ç–∞?'))
			return
		const result = await fetchData('/waitlist-res', { method: 'DELETE' })
		if (result) {
			showStatus('–í—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–π—Ç–ª–∏—Å—Ç–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω—ã.', 'success')
			loadWaitlistRes()
		}
	})

	// –í—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π
	selectWinnersForm.addEventListener('submit', async e => {
		/* ... (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ... */
	})

	// üî• –û–ë–ù–û–í–õ–ï–ù–ò–ï: –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è
	document.body.addEventListener('click', async e => {
		if (e.target && e.target.matches('.delete-btn')) {
			const id = e.target.dataset.id
			const type = e.target.dataset.type

			if (!id || !type) {
				showStatus('–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å ID –∏–ª–∏ —Ç–∏–ø –∑–∞–ø–∏—Å–∏.', 'error')
				return
			}
			if (!confirm(`–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å —Å ID ${id}?`)) return

			let endpoint = ''
			let reloadFunction = null

			switch (type) {
				case 'participant':
					endpoint = `/participants/${id}`
					reloadFunction = loadParticipants
					break
				case 'winner':
					endpoint = `/winners/${id}`
					reloadFunction = loadWinners
					break
				case 'waitlist':
					endpoint = `/waitlist/${id}`
					reloadFunction = loadWaitlist
					break
				// üî• –ù–û–í–´–ô –°–õ–£–ß–ê–ô
				case 'waitlist-res':
					endpoint = `/waitlist-res/${id}`
					reloadFunction = loadWaitlistRes
					break
				default:
					showStatus('–û—à–∏–±–∫–∞: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –∑–∞–ø–∏—Å–∏.', 'error')
					return
			}

			const result = await fetchData(endpoint, { method: 'DELETE' })
			if (result) {
				showStatus(`–ó–∞–ø–∏—Å—å —Å ID ${id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.`, 'success')
				if (reloadFunction) reloadFunction()
			}
		}
	})

	// --- üî• –û–ë–ù–û–í–õ–ï–ù–ò–ï: –ù–ê–í–ò–ì–ê–¶–ò–Ø ---
	navRaffleBtn.addEventListener('click', () => {
		raffleView.classList.remove('hidden')
		waitlistView.classList.add('hidden')
		waitlistResView.classList.add('hidden') // –°–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é

		navRaffleBtn.classList.add('active')
		navWaitlistBtn.classList.remove('active')
		navWaitlistResBtn.classList.remove('active')
	})

	navWaitlistBtn.addEventListener('click', () => {
		raffleView.classList.add('hidden')
		waitlistView.classList.remove('hidden')
		waitlistResView.classList.add('hidden') // –°–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤—É—é

		navRaffleBtn.classList.remove('active')
		navWaitlistBtn.classList.add('active')
		navWaitlistResBtn.classList.remove('active')

		loadWaitlist()
	})

	navWaitlistResBtn.addEventListener('click', () => {
		raffleView.classList.add('hidden')
		waitlistView.classList.add('hidden')
		waitlistResView.classList.remove('hidden') // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é

		navRaffleBtn.classList.remove('active')
		navWaitlistBtn.classList.remove('active')
		navWaitlistResBtn.classList.add('active')

		loadWaitlistRes() // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏
	})

	// --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –û–ë–ù–û–í–õ–ï–ù–ò–Ø ---
	refreshParticipantsBtn.addEventListener('click', loadParticipants)
	refreshWinnersBtn.addEventListener('click', loadWinners)
	refreshWaitlistBtn.addEventListener('click', loadWaitlist)
	refreshWaitlistResBtn.addEventListener('click', loadWaitlistRes) 

	// --- –ê–í–¢–û–ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ---
	if (sessionStorage.getItem('adminToken')) {
		// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
		loadParticipants()
		loadWinners()
	}
})
